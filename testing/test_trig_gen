#!/usr/bin/env python

import sys

import numpy

import pygtk
pygtk.require("2.0")
import gobject
gobject.threads_init()
import pygst
pygst.require("0.10")

from glue.ligolw import utils, lsctables, table, ligolw

import gst

# Stupid content handlers -- invoke them here, after reading XML
from gstlal import pipeparts
import gstlal.excesspower as ep
from gstlal.epparts import EPHandler

from pylal.xlal.datatypes.snglburst import from_buffer as sngl_bursts_from_buffer

#
# Default values
#
rate = 16384
df = 1/4.0
fhigh = 8192

#sbtable = table.get_table(utils.load_filename(sys.argv[1]), lsctables.SnglBurstTable.tableName)
xmldoc = ep.create_bank_xml(flow=16, fhigh=8000, band=4, duration=1/8.0, level=0, ndof=1, detector="H1")
fname = "trig_test.xml.gz"
utils.write_filename(xmldoc, fname, gz=True)

pipeline = gst.Pipeline("trigtest")
mainloop = gobject.MainLoop()

#
# Data source
#

# Gaussian noise
head = pipeparts.mkaudiotestsrc(pipeline, wave=9, volume=1.0) #, blocksize=16384*8*8, num_buffers=10)
head = pipeparts.mkcapsfilter(pipeline, head, "audio/x-raw-float,rate=16384")
head = pipeparts.mkprogressreport(pipeline, head, "data source")

head = pipeparts.mktaginject(pipeline, head, tags="instrument=\"H1\",channel-name=\"FAKE-STRAIN\",units=\"strain\"")

# TODO: sum square?

head = pipeparts.mkbursttriggergen(pipeline, head, 1, bank=fname)
head = pipeparts.mkprogressreport(pipeline, head, "trig source")

#
# This pipeline ain' go nowhere, no how.
#

def parse_triggers(elem):
    buf = elem.emit("pull-buffer")
    triggers = sngl_bursts_from_buffer(buf)
    for t in triggers:
        print t.peak_time, t.snr
    del triggers
    del buf

if False:
    pipeparts.mkfakesink(pipeline, head)
else:
    appsync = pipeparts.AppSync(appsink_new_buffer=parse_triggers)
    appsync.add_sink(pipeline, pipeparts.mkqueue(pipeline, head))

#
# Run
#
if pipeline.set_state( gst.STATE_PLAYING ) == gst.STATE_CHANGE_FAILURE:
	raise RuntimeError( "pipeline failed to enter PLAYING state" )
mainloop.run()
